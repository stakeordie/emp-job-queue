{
  "name": "emp-ai-backend",
  "version": "1.0.0",
  "description": "EmProps AI Backend - Distributed AI workload orchestration with specialized machine pools",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "turbo run build",
    "dev": "turbo run dev",
    "lint": "turbo run lint",
    "typecheck": "turbo run typecheck",
    "test": "turbo run test",
    "test:all": "./scripts/test-all.sh",
    "clean": "turbo run clean && rm -rf node_modules",
    "install:clean": "rm -rf node_modules pnpm-lock.yaml && pnpm install",
    "env:build": "node scripts/env/build-env.js",
    "env:switch": "node scripts/env/switch-env.js",
    "env:validate": "node scripts/env/validate-env.js",
    "env:list": "node scripts/env/list-profiles.js",
    "dev:api": "turbo run dev --filter=api",
    "dev:worker": "turbo run dev --filter=worker",
    "dev:monitor": "turbo run dev --filter=monitor",
    "dev:docs": "turbo run dev --filter=docs",
    "dev:local-redis": "./scripts/dev-local-redis.sh",
    "dev:local-redis:stop": "echo 'üõë Stopping local Redis server...' && brew services stop redis && echo '‚úÖ Local Redis stopped'",
    "shutdown": "./scripts/shutdown-all.sh",
    "logs": "node scripts/log-viewer.js",
    "logs:all": "node scripts/log-viewer.js all",
    "logs:clear": "node scripts/log-viewer.js clear",
    "logs:api": "node scripts/log-viewer.js api",
    "logs:worker": "node scripts/log-viewer.js worker",
    "logs:monitor": "node scripts/log-viewer.js monitor",
    "logs:docs": "node scripts/log-viewer.js docs",
    "logs:machines": "node scripts/log-viewer.js machines",
    "logs:api-redis": "node scripts/log-viewer.js api-redis",
    "logs:redis": "./scripts/redis-monitor-filtered.sh",
    "logs:redis:raw": "redis-cli monitor",
    "logs:monitorEventStream": "node scripts/log-viewer.js monitorEventStream",
    "logs:worker:all": "docker exec basic-machine-local pm2 logs --raw",
    "logs:worker:comfyui-gpu0": "docker exec basic-machine-local pm2 logs comfyui-gpu0 --raw",
    "logs:worker:comfyui-gpu1": "docker exec basic-machine-local pm2 logs comfyui-gpu1 --raw",
    "logs:worker:redis-worker-gpu0": "docker exec basic-machine-local pm2 logs redis-worker-gpu0 --raw",
    "logs:worker:redis-worker-gpu1": "docker exec basic-machine-local pm2 logs redis-worker-gpu1 --raw",
    "logs:worker:orchestrator": "docker exec basic-machine-local pm2 logs orchestrator --raw",
    "logs:worker:shared-setup": "docker exec basic-machine-local pm2 logs shared-setup --raw",
    "logs:comfyui": "./scripts/tail-comfyui-logs.sh",
    "logs:worker:files": "docker exec basic-machine-local tail -f /workspace/logs/*.log",
    "logs:worker:redis-traffic": "redis-cli -h localhost -p 6379 monitor",
    "logs:worker:pm2-status": "docker exec basic-machine-local pm2 status",
    "logs:eventstream": "node tools/event-stream-logger.js",
    "dev:full-stack": "./scripts/dev-full-stack.sh",
    "dev:full-stack:stop": "./scripts/dev-full-stack-stop.sh",
    "dev:full-stack:status": "./scripts/dev-full-stack-status.sh",
    "dev:full-local": "pnpm env:build --profile=full-local && pnpm dev",
    "dev:mixed": "pnpm env:build --profile=dev-mixed && pnpm dev",
    "dev:staging": "pnpm env:build --profile=staging-mixed && pnpm dev",
    "dev:remote-comfyui": "pnpm env:build --profile=remote-comfyui && pnpm machines:basic:local:up",
    "setup:developer": "pnpm env:build --profile=full-local && pnpm install && pnpm dev:local-redis",
    "build:api": "turbo run build --filter=api",
    "build:worker": "turbo run build --filter=worker",
    "build:monitor": "turbo run build --filter=monitor",
    "build:core": "turbo run build --filter=@emp/core",
    "bundle:worker": "./scripts/bundle-worker.sh",
    "machines:basic:up": "pnpm machines:basic:down && cd apps/machines/basic_machine && cp .env.local.prod .env.local && ./generate-docker-compose.sh && docker compose --env-file .env.local.prod --project-name basic-machine-prod --profile expose-ports up",
    "machines:basic:up:build": "pnpm machines:basic:down && cd apps/machines/basic_machine && cp .env.local.prod .env.local && ./generate-docker-compose.sh && docker compose --env-file .env.local.prod --project-name basic-machine-prod --profile expose-ports up --build",
    "machines:basic:local:up": "./debug-machine-calls.sh machines:basic:local:up && pnpm machines:basic:local:down && ./scripts/bundle-worker.sh && cd apps/machines/basic_machine && cp .env.local.dev .env.local && ./generate-docker-compose.sh && docker compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.override.yml --env-file .env.local.dev --project-name basic-machine-local --profile expose-ports up",
    "machines:basic:local:up:build": "pnpm machines:basic:local:down && ./scripts/bundle-worker.sh && cd apps/machines/basic_machine && cp .env.local.dev .env.local && ./generate-docker-compose.sh && docker compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.override.yml --env-file .env.local.dev --project-name basic-machine-local --profile expose-ports up --build",
    "machines:basic:local:up:build:nocache": "pnpm machines:basic:local:down && ./scripts/bundle-worker.sh && cd apps/machines/basic_machine && cp .env.local.dev .env.local && ./generate-docker-compose.sh && docker compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.override.yml --env-file .env.local.dev --project-name basic-machine-local --profile expose-ports build --no-cache && docker compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.override.yml --env-file .env.local.dev --project-name basic-machine-local --profile expose-ports up",
    "machines:basic:up:no-ports": "pnpm machines:basic:down && cd apps/machines/basic_machine && docker compose --env-file .env.local.prod --project-name basic-machine-prod up",
    "machines:basic:down": "cd apps/machines/basic_machine && docker compose --env-file .env.local.prod --project-name basic-machine-prod down",
    "machines:basic:local:down": "./debug-machine-calls.sh machines:basic:local:down && cd apps/machines/basic_machine && docker compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.override.yml --env-file .env.local.dev --project-name basic-machine-local down",
    "machines:basic:logs": "docker compose -f apps/machines/basic_machine/docker-compose.yml --env-file apps/machines/basic_machine/.env.local.prod --project-name basic-machine-prod logs -f",
    "machines:basic:local:logs": "docker compose -f apps/machines/basic_machine/docker-compose.yml --env-file apps/machines/basic_machine/.env.local.dev --project-name basic-machine-local logs -f",
    "machines:basic:status": "echo 'üîç Basic Machine Status Check (Production - port 9091)' && curl -s http://localhost:9091/health | jq || echo '‚ùå Health check failed'",
    "machines:basic:local:status": "echo 'üîç Basic Machine Status Check (Local - port 9092)' && curl -s http://localhost:9092/health | jq || echo '‚ùå Health check failed'",
    "machines:basic:comfyui": "echo 'üé® ComfyUI Status Check (Production - port 3189)' && curl -s http://localhost:3189/ | head -n 5 || echo '‚ùå ComfyUI not responding'",
    "machines:basic:local:comfyui": "echo 'üé® ComfyUI Status Check (Local - port 3190)' && curl -s http://localhost:3190/ | head -n 5 || echo '‚ùå ComfyUI not responding'",
    "machines:basic:local:simulation": "echo 'üß™ Simulation Status Check (Local - port 8299)' && curl -s http://localhost:8299/health | jq || echo '‚ùå Simulation service not responding'",
    "machines:basic:test:up": "pnpm machines:basic:test:down && ./scripts/bundle-worker.sh && cd apps/machines/basic_machine && cp .env.local.test .env.local && ./generate-docker-compose.sh && docker compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.override.yml --env-file .env.local.test --project-name basic-machine-test --profile expose-ports up",
    "machines:basic:test:up:build": "pnpm machines:basic:test:down && ./scripts/bundle-worker.sh && cd apps/machines/basic_machine && cp .env.local.test .env.local && ./generate-docker-compose.sh && docker compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.override.yml --env-file .env.local.test --project-name basic-machine-test --profile expose-ports up --build",
    "machines:basic:test:down": "cd apps/machines/basic_machine && docker compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.override.yml --env-file .env.local.test --project-name basic-machine-test down",
    "machines:basic:test:logs": "docker compose -f apps/machines/basic_machine/docker-compose.yml --env-file apps/machines/basic_machine/.env.local.test --project-name basic-machine-test logs -f",
    "machines:basic:test:status": "echo 'üß™ Test Machine Status Check (port 9094)' && curl -s http://localhost:9094/health | jq || echo '‚ùå Health check failed'",
    "machines:basic:test:comfyui": "echo 'üé® Test ComfyUI Status Check (port 3194)' && curl -s http://localhost:3194/ | head -n 5 || echo '‚ùå ComfyUI not responding'",
    "machines:basic:test:simulation": "echo 'üß™ Test Simulation Status Check (port 8301)' && curl -s http://localhost:8301/health | jq || echo '‚ùå Simulation service not responding'",
    "machines:basic:ports": "echo 'üåê Checking Basic Machine Ports (Production):' && echo '  Health (9091):' && nc -z localhost 9091 && echo '    ‚úÖ Open' || echo '    ‚ùå Closed' && echo '  ComfyUI (3189):' && nc -z localhost 3189 && echo '    ‚úÖ Open' || echo '    ‚ùå Closed'",
    "machines:basic:local:ports": "echo 'üåê Checking Basic Machine Ports (Local):' && echo '  Health (9092):' && nc -z localhost 9092 && echo '    ‚úÖ Open' || echo '    ‚ùå Closed' && echo '  Simulation (8299):' && nc -z localhost 8299 && echo '    ‚úÖ Open' || echo '    ‚ùå Closed' && echo '  ComfyUI (3190):' && nc -z localhost 3190 && echo '    ‚úÖ Open' || echo '    ‚ùå Closed'",
    "machines:base:up": "docker compose -f apps/machines/base_machine/docker-compose.yml up",
    "machines:multi": "echo 'üöÄ Starting 3 machines for multi-machine testing...' && pnpm machines:basic:local:up:build & pnpm machines:basic2:local:up:build & pnpm machines:basic3:local:up:build & wait",
    "machines:basic2:local:up:build": "cd apps/machines/basic_machine && cp .env.local.dev .env.local.machine2 && sed 's/CONTAINER_NAME=basic-machine-local/CONTAINER_NAME=basic-machine-local-2/g; s/WORKER_ID_PREFIX=basic-machine/WORKER_ID_PREFIX=basic-machine-2/g; s/EXPOSED_PORTS=2224:22,8082:80,3190:8188,9092:9090/EXPOSED_PORTS=2234:22,8092:80,3200:8188,9102:9090/g' .env.local.machine2 > .env.local.machine2.tmp && mv .env.local.machine2.tmp .env.local.machine2 && cp .env.local.machine2 .env.local && ./generate-docker-compose.sh && docker compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.override.yml --env-file .env.local.machine2 --project-name basic-machine-local-2 --profile expose-ports up --build",
    "machines:basic3:local:up:build": "cd apps/machines/basic_machine && cp .env.local.dev .env.local.machine3 && sed 's/CONTAINER_NAME=basic-machine-local/CONTAINER_NAME=basic-machine-local-3/g; s/WORKER_ID_PREFIX=basic-machine/WORKER_ID_PREFIX=basic-machine-3/g; s/EXPOSED_PORTS=2224:22,8082:80,3190:8188,9092:9090/EXPOSED_PORTS=2244:22,8102:80,3210:8188,9112:9090/g' .env.local.machine3 > .env.local.machine3.tmp && mv .env.local.machine3.tmp .env.local.machine3 && cp .env.local.machine3 .env.local && ./generate-docker-compose.sh && docker compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.override.yml --env-file .env.local.machine3 --project-name basic-machine-local-3 --profile expose-ports up --build",
    "machines:multi:down": "echo 'üõë Stopping all machines...' && pnpm machines:basic:local:down && docker compose --project-name basic-machine-local-2 down && docker compose --project-name basic-machine-local-3 down",
    "machines:basic:registry:up": "pnpm machines:basic:registry:down && cd apps/machines/basic_machine && cp .env.local.registry .env.local && docker compose -f docker-compose.registry.yml --env-file .env.local.registry --project-name basic-machine-registry up",
    "machines:basic:registry:up:pull": "pnpm machines:basic:registry:down && cd apps/machines/basic_machine && cp .env.local.registry .env.local && docker compose -f docker-compose.registry.yml --env-file .env.local.registry --project-name basic-machine-registry pull && docker compose -f docker-compose.registry.yml --env-file .env.local.registry --project-name basic-machine-registry up",
    "machines:basic:registry:down": "cd apps/machines/basic_machine && docker compose -f docker-compose.registry.yml --env-file .env.local.registry --project-name basic-machine-registry down",
    "machines:basic:registry:logs": "docker compose -f apps/machines/basic_machine/docker-compose.registry.yml --env-file apps/machines/basic_machine/.env.local.registry --project-name basic-machine-registry logs -f",
    "machines:basic:registry:status": "echo 'üîç Registry Machine Status Check (port 9093)' && curl -s http://localhost:9093/health | jq || echo '‚ùå Health check failed'",
    "machines:multi:status": "echo 'üìä Multi-Machine Status:' && echo '  Machine 1 (9092):' && curl -s http://localhost:9092/health | jq -r '.status // \"‚ùå Down\"' && echo '  Machine 2 (9102):' && curl -s http://localhost:9102/health | jq -r '.status // \"‚ùå Down\"' && echo '  Machine 3 (9112):' && curl -s http://localhost:9112/health | jq -r '.status // \"‚ùå Down\"'",
    "machines:base:up:build": "docker compose -f apps/machines/base_machine/docker-compose.yml up --build",
    "machines:base:down": "docker compose -f apps/machines/base_machine/docker-compose.yml down",
    "prod:up": "docker-compose -f docker-compose.prod.yml -f docker-compose.gpu-machines.yml --env-file apps/machines/basic_machine/.env.production up -d",
    "prod:up:build": "docker-compose -f docker-compose.prod.yml -f docker-compose.gpu-machines.yml --env-file apps/machines/basic_machine/.env.production up -d --build",
    "prod:down": "docker-compose -f docker-compose.prod.yml -f docker-compose.gpu-machines.yml --env-file apps/machines/basic_machine/.env.production down",
    "prod:logs": "docker-compose -f docker-compose.prod.yml -f docker-compose.gpu-machines.yml --env-file apps/machines/basic_machine/.env.production logs -f",
    "prod:status": "echo 'üöÄ Production Status Check:' && echo '  API Server:' && curl -s http://localhost:3001/health | jq -r '.status // \"‚ùå Down\"' && echo '  GPU Machine 1:' && curl -s http://localhost:9100/health | jq -r '.status // \"‚ùå Down\"' && echo '  GPU Machine 2:' && curl -s http://localhost:9101/health | jq -r '.status // \"‚ùå Down\"' 2>/dev/null || echo '    ‚ùå Down'",
    "prod:multi:up": "docker-compose -f docker-compose.prod.yml -f docker-compose.gpu-machines.yml --env-file apps/machines/basic_machine/.env.production --profile multi-gpu up -d",
    "prod:multi:down": "docker-compose -f docker-compose.prod.yml -f docker-compose.gpu-machines.yml --env-file apps/machines/basic_machine/.env.production --profile multi-gpu down",
    "machines:basic:prod-test:up": "pnpm machines:basic:prod-test:down && cd apps/machines/basic_machine && cp .env.local.prod-test .env.local && BASIC_MACHINE_IMAGE=emprops/basic-machine:v0.1.6 docker compose -f docker-compose.prod-test.yml --env-file .env.local.prod-test --project-name basic-machine-prod-test up",
    "machines:basic:prod-test:up:build": "pnpm machines:basic:prod-test:down && cd apps/machines/basic_machine && cp .env.local.prod-test .env.local && docker compose -f docker-compose.prod-test.yml --env-file .env.local.prod-test --project-name basic-machine-prod-test up --build",
    "machines:basic:prod-test:down": "cd apps/machines/basic_machine && docker compose -f docker-compose.prod-test.yml --env-file .env.local.prod-test --project-name basic-machine-prod-test down",
    "machines:basic:prod-test:logs": "docker compose -f apps/machines/basic_machine/docker-compose.prod-test.yml --env-file apps/machines/basic_machine/.env.local.prod-test --project-name basic-machine-prod-test logs -f",
    "machines:basic:prod-test:status": "echo 'üîç Production-Test Machine Status Check (port 9099)' && curl -s http://localhost:9099/health | jq || echo '‚ùå Health check failed'",
    "machines:basic:prod:up": "pnpm machines:basic:prod-test:down && cd apps/machines/basic_machine && docker compose -f docker-compose.prod.yml --env-file .env.local.prod --project-name basic-machine-production up",
    "machines:basic:prod:up:build": "pnpm machines:basic:prod:down && cd apps/machines/basic_machine && docker compose -f docker-compose.prod.yml --env-file .env.local.prod --project-name basic-machine-production up --build",
    "machines:basic:prod:down": "cd apps/machines/basic_machine && docker compose -f docker-compose.prod.yml --env-file .env.local.prod --project-name basic-machine-production down",
    "machines:basic:prod:build": "pnpm machines:basic:prod:down && cd apps/machines/basic_machine && docker compose -f docker-compose.prod.yml --env-file .env.local.prod --project-name basic-machine-production build",
    "machines:basic:prod:push": "cd apps/machines/basic_machine && docker push emprops/basic-machine-production:latest",
    "machines:basic:prod": "cd apps/machines/basic_machine && pnpm docker:build:version"
  },
  "devDependencies": {
    "esbuild": "^0.25.6",
    "playwright": "^1.53.2",
    "turbo": "^2.0.0",
    "typescript": "^5.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=10.0.0"
  },
  "packageManager": "pnpm@10.12.4",
  "dependencies": {
    "chalk": "^5.4.1"
  }
}