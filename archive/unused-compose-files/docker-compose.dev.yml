# Development Docker Compose - Fast rebuilds with volume mounts
# Use with: docker-compose -f docker-compose.dev.yml up

services:
  # Redis database
  redis:
    image: redis:7-alpine
    container_name: redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - emp-redis-dev-network
    restart: unless-stopped

  # Hub service - Development mode with volume mounting
  hub-dev:
    container_name: hub-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: hub
    ports:
      - "3001:3001"  # HTTP API
      - "3002:3002"  # WebSocket
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis-dev:6379/0
      - HUB_PORT=3001
      - HUB_HOST=0.0.0.0
      - WS_PORT=3002
      - WS_HOST=0.0.0.0
      - LOG_LEVEL=debug
    volumes:
      # Mount source code for live reloading
      - ./src:/app/src
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./tsconfig.build.json:/app/tsconfig.build.json:ro
      # Cache node_modules to avoid reinstalling
      - hub_node_modules:/app/node_modules
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 10s
    networks:
      - emp-redis-dev-network
    restart: unless-stopped
    command: ["pnpm", "dev:hub"]

  # Worker 1 - Development mode with volume mounting
  worker1-dev:
    container_name: worker1-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: worker
    environment:
      - NODE_ENV=development
      - WORKER_ID=worker1-js
      - HUB_REDIS_URL=redis://redis-dev:6379/0
      - HUB_WS_URL=ws://hub-dev:3002
      - WORKER_CONNECTORS=simulation
      - WORKER_SIMULATION_PROCESSING_TIME=5
      - WORKER_SIMULATION_STEPS=25
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_DASHBOARD_PORT=1511
      - LOG_LEVEL=debug
    ports:
      - "1511:1511"  # Worker 1 dashboard
    volumes:
      # Mount source code for live reloading
      - ./src:/app/src
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./tsconfig.build.json:/app/tsconfig.build.json:ro
      # Cache node_modules to avoid reinstalling
      - worker1_node_modules:/app/node_modules
    depends_on:
      hub-dev:
        condition: service_healthy
    networks:
      - emp-redis-dev-network
    restart: unless-stopped
    command: ["pnpm", "dev:worker"]

  # Worker 2 - Development mode with volume mounting
  worker2-dev:
    container_name: worker2-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: worker
    environment:
      - NODE_ENV=development
      - WORKER_ID=worker2-js
      - HUB_REDIS_URL=redis://redis-dev:6379/0
      - HUB_WS_URL=ws://hub-dev:3002
      - WORKER_CONNECTORS=simulation
      - WORKER_SIMULATION_PROCESSING_TIME=3
      - WORKER_SIMULATION_STEPS=30
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_DASHBOARD_PORT=1512
      - LOG_LEVEL=debug
    ports:
      - "1512:1512"  # Worker 2 dashboard
    volumes:
      # Mount source code for live reloading
      - ./src:/app/src
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./tsconfig.build.json:/app/tsconfig.build.json:ro
      # Cache node_modules to avoid reinstalling
      - worker2_node_modules:/app/node_modules
    depends_on:
      hub-dev:
        condition: service_healthy
    networks:
      - emp-redis-dev-network
    restart: unless-stopped
    command: ["pnpm", "dev:worker"]

  # Worker 3 - ComfyUI connector (local profile)
  worker3-dev:
    container_name: worker3-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: worker
    environment:
      - NODE_ENV=development
      - WORKER_ID=worker3-comfyui
      - HUB_REDIS_URL=redis://redis-dev:6379/0
      - HUB_WS_URL=ws://hub-dev:3002
      - WORKER_CONNECTORS=comfyui,simulation
      - WORKER_COMFYUI_HOST=108.53.57.130
      - WORKER_COMFYUI_PORT=53647
      - WORKER_COMFYUI_USERNAME=sd
      - WORKER_COMFYUI_PASSWORD=UbjpkE6kwM
      - WORKER_COMFYUI_USE_BASIC_AUTH=true
      - WORKER_SIMULATION_PROCESSING_TIME=10
      - WORKER_SIMULATION_STEPS=2
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_DASHBOARD_PORT=1513
      - WORKER_GPU_COUNT=2
      - WORKER_GPU_MEMORY_GB=24
      - WORKER_GPU_MODEL=RTX 4090
      - WORKER_CPU_CORES=16
      - WORKER_RAM_GB=64
      - LOG_LEVEL=debug
    ports:
      - "1513:1513"  # Worker 3 dashboard
    volumes:
      # Mount source code for live reloading
      - ./src:/app/src
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./tsconfig.build.json:/app/tsconfig.build.json:ro
      # Cache node_modules to avoid reinstalling
      - worker3_node_modules:/app/node_modules
    depends_on:
      hub-dev:
        condition: service_healthy
    networks:
      - emp-redis-dev-network
    restart: unless-stopped
    command: ["pnpm", "dev:worker"]

  # Worker 4 - Simulation only (full profile)
  worker4-dev:
    container_name: worker4-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: worker
    environment:
      - NODE_ENV=development
      - WORKER_ID=worker4-js
      - HUB_REDIS_URL=redis://redis-dev:6379/0
      - HUB_WS_URL=ws://hub-dev:3002
      - WORKER_CONNECTORS=simulation
      - WORKER_SIMULATION_PROCESSING_TIME=10
      - WORKER_SIMULATION_STEPS=2
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_DASHBOARD_PORT=1514
      - LOG_LEVEL=debug
    ports:
      - "1514:1514"  # Worker 4 dashboard
    volumes:
      # Mount source code for live reloading
      - ./src:/app/src
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./tsconfig.build.json:/app/tsconfig.build.json:ro
      # Cache node_modules to avoid reinstalling
      - worker4_node_modules:/app/node_modules
    depends_on:
      hub-dev:
        condition: service_healthy
    networks:
      - emp-redis-dev-network
    restart: unless-stopped
    command: ["pnpm", "dev:worker"]

networks:
  emp-redis-dev-network:
    driver: bridge

volumes:
  redis_dev_data:
    driver: local
  hub_node_modules:
    driver: local
  worker1_node_modules:
    driver: local
  worker2_node_modules:
    driver: local
  worker3_node_modules:
    driver: local
  worker4_node_modules:
    driver: local