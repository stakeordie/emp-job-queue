# Fluent Bit Parser Configuration
# Extracts raw service names from log filenames
# 
# WORKFLOW: When you see unknown services in Dash0:
# 1. Look at the `raw_service` field in logs to see the actual service name
# 2. Add a mapping in fluent-bit-worker.conf using the pattern below
# 3. Restart Fluent Bit to apply the new mapping
#
# Examples of service name extraction:
# /workspace/logs/comfyui-gpu0-out.log → raw_service: "comfyui-gpu0"
# /workspace/logs/redis-worker-simulation-gpu1-error.log → raw_service: "redis-worker-simulation-gpu1"
# /workspace/logs/playwright-service-combined.log → raw_service: "playwright-service"

[PARSER]
    Name extract_service_name
    Format regex
    # Main pattern: Extracts complete service name from log filename
    # Captures everything before the log type suffix (-out, -error, -combined)
    # Examples: 
    #   redis-worker-comfyui-gpu0-out.log → service_name: redis-worker-comfyui-gpu0
    #   comfyui-gpu0-error.log → service_name: comfyui-gpu0
    #   health-server-combined.log → service_name: health-server
    #   simulation-service-out.log → service_name: simulation-service
    Regex ^/workspace/logs/(?<service_name>.+)-(?<log_type>out|error|combined)\.log$
    Types service_name:string,log_type:string