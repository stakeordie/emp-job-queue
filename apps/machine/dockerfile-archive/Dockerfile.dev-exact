# Development Dockerfile that exactly matches production environment
# but allows for rapid code iteration

FROM pytorch/pytorch:2.7.0-cuda12.8-cudnn9-runtime as dev-base

# EXACTLY replicate production system setup
RUN echo "GPU build cache bust: 1"

RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get update --allow-releaseinfo-change && \
    apt-get install -y ca-certificates gnupg curl && \
    curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    npm install -g pnpm pm2 && \
    pm2 install pm2-logrotate && \
    pm2 set pm2-logrotate:max_size 10M && \
    pm2 set pm2-logrotate:retain 7 && \
    pm2 set pm2-logrotate:compress true && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install GPU monitoring tools (exactly as production)
RUN pip3 install --no-cache-dir \
    nvidia-ml-py3 \
    gpustat \
    py3nvml \
    psutil

# Create service-manager directory (exactly as production)
WORKDIR /service-manager

# Copy package files for dependency installation
COPY package*.json ./

# Install dependencies (cached layer)
RUN pnpm install --frozen-lockfile

# Create development entrypoint that allows code mounting
COPY docker-entrypoint-dev.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint-dev.sh

ENTRYPOINT ["/usr/local/bin/docker-entrypoint-dev.sh"]
CMD ["node", "src/index-pm2.js"]