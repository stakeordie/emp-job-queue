{
  "connectors": {
    "ComfyUIConnector": {
      "path": "./redis-direct-worker.js",
      "description": "Local ComfyUI WebSocket connector - uses internal ComfyUI installation"
    },
    "ComfyUIRemoteConnector": {
      "path": "./redis-direct-worker.js", 
      "description": "Remote ComfyUI WebSocket connector - connects to external ComfyUI instance"
    },
    "SimulationHttpConnector": {
      "path": "./redis-direct-worker.js",
      "description": "Simulation processing connector for testing and development"
    },
    "OpenAITextConnector": {
      "path": "./redis-direct-worker.js",
      "description": "OpenAI text generation API connector"
    },
    "OpenAIImageConnector": {
      "path": "./redis-direct-worker.js",
      "description": "OpenAI image generation API connector"
    },
    "OpenAIImg2ImgConnector": {
      "path": "./redis-direct-worker.js",
      "description": "OpenAI image-to-image generation API connector"
    }
  },

  "workers": {
    "comfyui": {
      "service": [
        {
          "capability": "comfyui",
          "connector": "ComfyUIConnector",
          "type": "internal"
        }
      ],
      "installer": "installComfyUI",
      "resource_binding": "${COMFYUI_RESOURCE_BINDING:-gpu}",
      "build_stage": "comfyui",
      "service_instances_per_gpu": "${COMFYUI_INSTANCES_PER_GPU:-1}",
      "ports": ["${COMFYUI_BASE_PORT:-8188}"],
      "port_increment": "${COMFYUI_PORT_INCREMENT:-1}",
      "description": "ComfyUI image generation service with local installation",
      "installer_config": {
        "branch": "${COMFYUI_BRANCH:-main}",
        "repo_url": "${COMFYUI_REPO_URL:-https://github.com/stakeordie/ComfyUI.git}",
        "custom_nodes_enabled": "${COMFYUI_ENABLE_CUSTOM_NODES:-true}",
        "models_path": "${COMFYUI_MODELS_PATH:-/workspace/ComfyUI/models}",
        "install_timeout": "${COMFYUI_INSTALL_TIMEOUT:-300}"
      }
    },

    "comfyui-remote": {
      "service": [
        {
          "capability": ["comfyui"],
          "connector": "ComfyUIRemoteConnector",
          "type": "external"
        },
        {
          "capability": ["simulation"],
          "connector": "SimulationConnector",
          "type": "external"
        }
      ],
      "installer": null,
      "resource_binding": "shared",
      "build_stage": "base",
      "description": "Remote ComfyUI WebSocket connector - connects to external ComfyUI instance"
    },
    
    "playwright": {
      "service": [
        {
          "capability": "playwright",
          "connector": "PlaywrightConnector",
          "type": "internal"
        }
      ],
      "installer": "installPlaywright",
      "resource_binding": "cpu",
      "build_stage": "playwright",
      "service_instances_per_machine": "${PLAYWRIGHT_INSTANCES_PER_MACHINE:-1}",
      "ports": ["${PLAYWRIGHT_BASE_PORT:-9092}"],
      "port_increment": "${PLAYWRIGHT_PORT_INCREMENT:-0}",
      "description": "Playwright browser automation service",
      "installer_config": {
        "browsers": "${PLAYWRIGHT_BROWSERS:-chromium,firefox,webkit}",
        "headless": "${PLAYWRIGHT_HEADLESS:-true}",
        "install_timeout": "${PLAYWRIGHT_INSTALL_TIMEOUT:-120}"
      }
    },
    
    "simulation": {
      "service": [
        {
          "capability": "simulation",
          "connector": "SimulationHttpConnector",
          "type": "internal"
        }
      ],
      "installer": "installSimulation",
      "resource_binding": "mock_gpu",
      "build_stage": "simulation",
      "service_instances_per_machine": "${SIMULATION_INSTANCES_PER_MACHINE:-10}",
      "ports": ["${SIMULATION_BASE_PORT:-8299}"],
      "port_increment": "${SIMULATION_PORT_INCREMENT:-0}",
      "description": "Simulation service for testing and development",
      "installer_config": {
        "test_mode": "${SIMULATION_TEST_MODE:-true}",
        "data_path": "${SIMULATION_DATA_PATH:-/workspace/simulation/data}",
        "capabilities": "${SIMULATION_CAPABILITIES:-image_generation,text_processing}"
      }
    },
    
    "openai": {
      "service": [
        {
          "capability": "openai_text",
          "connector": "OpenAITextConnector",
          "type": "external"
        },
        {
          "capability": "openai_image",
          "connector": "OpenAIImageConnector",
          "type": "external"
        },
        {
          "capability": "openai_img2img",
          "connector": "OpenAIImg2ImgConnector",
          "type": "external"
        }
      ],
      "installer": null,
      "resource_binding": "shared",
      "build_stage": "base",
      "required_env": ["OPENAI_API_KEY","OPENAI_IMAGE_MODEL","CLOUD_STORAGE_PROVIDER"],
      "description": "OpenAI API connectors (no installation required)",
      "api_config": {
        "base_url": "${OPENAI_BASE_URL:-https://api.openai.com/v1}",
        "timeout": "${OPENAI_TIMEOUT:-60}",
        "max_retries": "${OPENAI_MAX_RETRIES:-3}",
        "text_models": "${OPENAI_TEXT_MODELS:-gpt-4,gpt-3.5-turbo}",
        "image_models": "${OPENAI_IMAGE_MODELS:-dall-e-3,dall-e-2}"
      }
    },
    "openai-text": {
      "service": [
        {
          "capability": "text_generation",
          "connector": "OpenAITextConnector",
          "type": "external"
        }
      ],
      "installer": null,
      "resource_binding": "shared",
      "build_stage": "base",
      "required_env": ["OPENAI_API_KEY"],
      "description": "OpenAI API connectors (no installation required)",
      "api_config": {
        "base_url": "${OPENAI_BASE_URL:-https://api.openai.com/v1}",
        "timeout": "${OPENAI_TIMEOUT:-60}",
        "max_retries": "${OPENAI_MAX_RETRIES:-3}",
        "text_models": "${OPENAI_TEXT_MODELS:-gpt-4,gpt-3.5-turbo}"
      }
    }
  },
  
  "resource_bindings": {
    "gpu": {
      "description": "Bind to specific GPU device",
      "scaling": "per_gpu",
      "exclusive": true
    },
    "cpu": {
      "description": "Bind to CPU cores",
      "scaling": "per_machine", 
      "exclusive": false
    },
    "shared": {
      "description": "Shared resources for API-only services",
      "scaling": "unlimited",
      "exclusive": false
    },
    "mock_gpu": {
      "description": "Mock GPU mode - simulates GPU scaling but uses CPU",
      "scaling": "per_gpu",
      "exclusive": true,
      "force_cpu": true
    }
  },
  
  "service_types": {
    "internal": {
      "description": "Services that require installation and setup",
      "requires_installer": true,
      "has_ports": true,
      "has_pm2_process": true
    },
    "external": {
      "description": "External API services (no installation)",
      "requires_installer": false,
      "has_ports": false,
      "has_pm2_process": false
    }
  }
}