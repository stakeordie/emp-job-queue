services:
  basic-machine:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        CACHE_BUST: ${CACHE_BUST:-1}
    image: basic-machine:latest
    platform: linux/amd64
    container_name: basic-machine
    hostname: basic-machine
    restart: unless-stopped
    
    # Graceful shutdown configuration
    stop_grace_period: 45s  # Allow time to finish jobs and send shutdown events
    stop_signal: SIGTERM    # Send SIGTERM for graceful shutdown
    
    # GPU support (disabled for testing)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]
    
    # Environment
    env_file:
      - .env.local
    environment:
      - NODE_ENV=production
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    
    # Ports are configured in docker-compose.override.yml
    # Generated from EXPOSED_PORTS in .env.local
    # Run: ./generate-docker-compose.sh to regenerate
    
    # Volumes
    volumes:
      # Shared directory structure  
      - ./data/shared:/workspace/shared
      - ./data/logs:/workspace/logs
      
      # Development hot reload (comment out for production)
      - ./src:/service-manager/src:ro
      - ./config:/service-manager/config:ro
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5m
    
    # Networks
    networks:
      - emp-network

# Development services
  redis:
    image: redis:7-alpine
    container_name: basic-machine-redis
    restart: unless-stopped
    stop_grace_period: 10s  # Allow Redis to save data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    networks:
      - emp-network
    profiles:
      - dev

networks:
  emp-network:
    driver: bridge

volumes:
  redis-data: