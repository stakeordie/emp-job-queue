# Fluent Bit Configuration for Worker Integration
# Collects logs from worker processes and forwards to Fluentd aggregation service

[SERVICE]
    Flush 5
    Log_Level info
    Daemon off
    
    # Parser configuration directory
    Parsers_File /fluent-bit/etc/parsers.conf
    Parsers_File /fluent-bit/etc/parsers_extra.conf

# Accept logs from worker processes via HTTP
[INPUT]
    Name http
    Tag worker.logs
    Host 0.0.0.0
    Port 9880
    Buffer_Size 32k
    Buffer_Max_Size 64k

# Parse JSON logs if they come as strings
[FILTER]
    Name parser
    Match worker.*
    Key_Name message
    Parser json
    Reserve_Data On
    Preserve_Key On

# Add worker metadata to all logs
[FILTER]
    Name record_modifier
    Match worker.*
    
    # Worker identification
    Record machine_id ${MACHINE_ID}
    Record worker_id ${WORKER_ID}
    Record service_type ${SERVICE_TYPE}
    Record connector_id ${CONNECTOR_ID}
    
    # Deployment context
    Record deployment_env ${DEPLOYMENT_ENV:-development}
    Record region ${RAILWAY_REGION:-unknown}
    Record service_instance ${RAILWAY_SERVICE_INSTANCE_ID:-unknown}
    
    # Log metadata
    Record log_source fluent-bit-worker
    Record log_version 1.0
    Record processed_at ${strftime(%Y-%m-%dT%H:%M:%S.%3NZ)}

# Normalize log levels (ensure consistency)
[FILTER]
    Name modify
    Match worker.*
    
    # Normalize level field
    Condition Key_value_matches level ^debug$
    Set normalized_level debug
    
[FILTER] 
    Name modify
    Match worker.*
    Condition Key_value_matches level ^info$
    Set normalized_level info
    
[FILTER]
    Name modify  
    Match worker.*
    Condition Key_value_matches level ^warn$
    Set normalized_level warn
    
[FILTER]
    Name modify
    Match worker.*
    Condition Key_value_matches level ^error$ 
    Set normalized_level error

# Route logs based on service type for specialized processing
[FILTER]
    Name rewrite_tag
    Match worker.*
    Rule $service_type ^comfyui$ worker.comfyui false
    Rule $service_type ^openai worker.openai false
    Rule $service_type ^a1111$ worker.a1111 false  
    Rule $service_type ^simulation$ worker.simulation false
    Rule $service_type .* worker.generic false

# ComfyUI-specific log processing
[FILTER]
    Name record_modifier
    Match worker.comfyui
    Record log_category comfyui-connector
    
# OpenAI-specific log processing  
[FILTER]
    Name record_modifier
    Match worker.openai
    Record log_category openai-connector

# A1111-specific log processing
[FILTER]
    Name record_modifier
    Match worker.a1111
    Record log_category a1111-connector
    
# Simulation-specific log processing
[FILTER]
    Name record_modifier
    Match worker.simulation  
    Record log_category simulation-connector
    
# Generic log processing
[FILTER]
    Name record_modifier
    Match worker.generic
    Record log_category generic-connector

# Debug output (optional - remove in production)
[OUTPUT]
    Name stdout
    Match worker.*
    Format json_lines
    
    # Only show in debug mode
    Condition Key_Exists debug_mode

# Forward to Fluentd aggregation service
[OUTPUT]
    Name http
    Match worker.*
    Host ${FLUENTD_HOST:-host.docker.internal}
    Port ${FLUENTD_PORT:-8888}
    URI /worker-logs
    Format json
    
    # JSON formatting
    json_date_key timestamp
    json_date_format epoch
    
    # HTTP settings
    http_User ${FLUENTD_USER:-}
    http_Passwd ${FLUENTD_PASSWORD:-}
    header Content-Type application/json
    
    # Retry configuration
    Retry_Limit 3
    
    # Buffering
    storage.type filesystem
    storage.path /tmp/fluent-bit-buffer
    storage.sync normal
    storage.checksum off
    storage.max_chunks_up 128
    
    # Network timeouts
    net.connect_timeout 10s
    net.io_timeout 30s