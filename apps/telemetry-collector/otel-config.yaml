# OpenTelemetry Collector Configuration for Dash0
# Using real OTEL Collector instead of custom implementation

receivers:
  # Receive OTLP data via HTTP and gRPC
  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:${env:OTLP_HTTP_PORT}
      grpc:
        endpoint: 0.0.0.0:${env:OTLP_GRPC_PORT}

processors:
  # Batch spans for efficiency
  batch:
    timeout: 1s
    send_batch_size: 100
    send_batch_max_size: 500

  # Add resource attributes (only if not already set)
  resource:
    attributes:
      - key: deployment.environment
        value: ${env:CURRENT_ENV}
        action: insert

  # Transform attribute names for consistency
  transform:
    trace_statements:
      - context: span
        statements:
          - set(attributes["emp.job.id"], attributes["jobId"]) where attributes["jobId"] != nil
          - delete_key(attributes, "jobId") where attributes["jobId"] != nil
          - set(attributes["emp.worker.id"], attributes["workerId"]) where attributes["workerId"] != nil
          - delete_key(attributes, "workerId") where attributes["workerId"] != nil
          - set(attributes["emp.machine.id"], attributes["machineId"]) where attributes["machineId"] != nil
          - delete_key(attributes, "machineId") where attributes["machineId"] != nil
          - set(attributes["emp.user.id"], attributes["userId"]) where attributes["userId"] != nil
          - delete_key(attributes, "userId") where attributes["userId"] != nil

exporters:
  # Export to Dash0 via OTLP gRPC
  otlp/dash0:
    endpoint: ${env:DASH0_ENDPOINT}
    headers:
      authorization: Bearer ${env:DASH0_AUTH_TOKEN}
      dash0-dataset: ${env:DASH0_DATASET}
    compression: gzip
    tls:
      insecure: false

  # Debug exporter for local development
  debug:
    verbosity: detailed

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [resource, transform, batch]
      exporters: [otlp/dash0, debug]

    metrics:
      receivers: [otlp]
      processors: [resource, batch]
      exporters: [otlp/dash0, debug]

    logs:
      receivers: [otlp]
      processors: [resource, batch]
      exporters: [otlp/dash0, debug]

  extensions: []