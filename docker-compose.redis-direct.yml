# Docker Compose configuration for Redis-Direct Architecture
# Phase 1C - Lightweight API with direct Redis polling workers

services:
  # Redis database - central communication hub
  redis:
    image: redis:7-alpine
    container_name: emp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --notify-keyspace-events Ex
    networks:
      - emp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Lightweight API Server (replaces hub orchestration)
  api:
    container_name: emp-api
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3001:3001"  # HTTP + WebSocket API
    environment:
      - NODE_ENV=production
      - API_PORT=3001
      - REDIS_URL=redis://redis:6379/0
      - CORS_ORIGINS=*
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis-Direct Worker 1 - Simulation connector
  worker1:
    container_name: emp-worker1
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker1-direct
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=simulation
      - WORKER_CONNECTORS=simulation
      - WORKER_POLL_INTERVAL_MS=1000
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=2
      - WORKER_JOB_TIMEOUT_MINUTES=30
      # Simulation connector config
      - WORKER_SIMULATION_PROCESSING_TIME=5
      - WORKER_SIMULATION_STEPS=25
      # Hardware specs
      - WORKER_GPU_COUNT=1
      - WORKER_GPU_MEMORY_GB=8
      - WORKER_GPU_MODEL=Simulation
      - WORKER_CPU_CORES=4
      - WORKER_RAM_GB=16
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped

  worker2:
    container_name: emp-worker2
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker2-direct
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=simulation
      - WORKER_CONNECTORS=simulation
      - WORKER_POLL_INTERVAL_MS=1000
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=3
      - WORKER_JOB_TIMEOUT_MINUTES=30
      # Simulation connector config (faster)
      - WORKER_SIMULATION_PROCESSING_TIME=3
      - WORKER_SIMULATION_STEPS=15
      # Hardware specs
      - WORKER_GPU_COUNT=1
      - WORKER_GPU_MEMORY_GB=8
      - WORKER_GPU_MODEL=Simulation
      - WORKER_CPU_CORES=4
      - WORKER_RAM_GB=16
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network


  # Redis-Direct Worker 3 - ComfyUI + Simulation
  worker3:
    container_name: emp-worker3
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker3-comfyui
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=comfyui,simulation
      - WORKER_CONNECTORS=comfyui,simulation
      - WORKER_POLL_INTERVAL_MS=1000
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=1
      - WORKER_JOB_TIMEOUT_MINUTES=60
      # ComfyUI connector config
      - WORKER_COMFYUI_HOST=${COMFYUI_HOST:-host.docker.internal}
      - WORKER_COMFYUI_PORT=${COMFYUI_PORT:-8188}
      - WORKER_COMFYUI_USERNAME=${COMFYUI_USERNAME:-}
      - WORKER_COMFYUI_PASSWORD=${COMFYUI_PASSWORD:-}
      - WORKER_COMFYUI_USE_BASIC_AUTH=${COMFYUI_USE_BASIC_AUTH:-false}
      # Simulation connector config
      - WORKER_SIMULATION_PROCESSING_TIME=10
      - WORKER_SIMULATION_STEPS=5
      # Hardware specs (GPU worker)
      - WORKER_GPU_COUNT=1
      - WORKER_GPU_MEMORY_GB=24
      - WORKER_GPU_MODEL=RTX 4090
      - WORKER_CPU_CORES=16
      - WORKER_RAM_GB=64
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped

  # Redis-Direct Worker 4 - Multiple instances (scale test)
  worker4:
    container_name: emp-worker4
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker4-scale
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=simulation
      - WORKER_CONNECTORS=simulation
      - WORKER_POLL_INTERVAL_MS=500  # Faster polling for scale test
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=5
      - WORKER_JOB_TIMEOUT_MINUTES=15
      # Simulation connector config (very fast)
      - WORKER_SIMULATION_PROCESSING_TIME=1
      - WORKER_SIMULATION_STEPS=10
      # Hardware specs
      - WORKER_GPU_COUNT=0
      - WORKER_CPU_CORES=2
      - WORKER_RAM_GB=8
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped

  worker5:
    container_name: emp-worker5
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker5-scale
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=simulation
      - WORKER_CONNECTORS=simulation
      - WORKER_POLL_INTERVAL_MS=500  # Faster polling for scale test
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=5
      - WORKER_JOB_TIMEOUT_MINUTES=15
      # Simulation connector config (very fast)
      - WORKER_SIMULATION_PROCESSING_TIME=1
      - WORKER_SIMULATION_STEPS=10
      # Hardware specs
      - WORKER_GPU_COUNT=0
      - WORKER_CPU_CORES=2
      - WORKER_RAM_GB=8
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped

  worker6:
    container_name: emp-worker6
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker6-scale
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=simulation
      - WORKER_CONNECTORS=simulation
      - WORKER_POLL_INTERVAL_MS=500  # Faster polling for scale test
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=5
      - WORKER_JOB_TIMEOUT_MINUTES=15
      # Simulation connector config (very fast)
      - WORKER_SIMULATION_PROCESSING_TIME=1
      - WORKER_SIMULATION_STEPS=10
      # Hardware specs
      - WORKER_GPU_COUNT=0
      - WORKER_CPU_CORES=2
      - WORKER_RAM_GB=8
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped

  worker7:
    container_name: emp-worker7
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker7-scale
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=simulation
      - WORKER_CONNECTORS=simulation
      - WORKER_POLL_INTERVAL_MS=500  # Faster polling for scale test
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=5
      - WORKER_JOB_TIMEOUT_MINUTES=15
      # Simulation connector config (very fast)
      - WORKER_SIMULATION_PROCESSING_TIME=1
      - WORKER_SIMULATION_STEPS=10
      # Hardware specs
      - WORKER_GPU_COUNT=0
      - WORKER_CPU_CORES=2
      - WORKER_RAM_GB=8
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped

  worker8:
    container_name: emp-worker8
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker8-scale
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=simulation
      - WORKER_CONNECTORS=simulation
      - WORKER_POLL_INTERVAL_MS=500  # Faster polling for scale test
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=5
      - WORKER_JOB_TIMEOUT_MINUTES=15
      # Simulation connector config (very fast)
      - WORKER_SIMULATION_PROCESSING_TIME=1
      - WORKER_SIMULATION_STEPS=10
      # Hardware specs
      - WORKER_GPU_COUNT=0
      - WORKER_CPU_CORES=2
      - WORKER_RAM_GB=8
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped

  worker9:
    container_name: emp-worker9
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker9-scale
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=simulation
      - WORKER_CONNECTORS=simulation
      - WORKER_POLL_INTERVAL_MS=500  # Faster polling for scale test
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=5
      - WORKER_JOB_TIMEOUT_MINUTES=15
      # Simulation connector config (very fast)
      - WORKER_SIMULATION_PROCESSING_TIME=1
      - WORKER_SIMULATION_STEPS=10
      # Hardware specs
      - WORKER_GPU_COUNT=0
      - WORKER_CPU_CORES=2
      - WORKER_RAM_GB=8
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped


  worker10:
    container_name: emp-worker10
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker10-direct
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=simulation
      - WORKER_CONNECTORS=simulation
      - WORKER_POLL_INTERVAL_MS=1000
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=2
      - WORKER_JOB_TIMEOUT_MINUTES=30
      # Simulation connector config
      - WORKER_SIMULATION_PROCESSING_TIME=5
      - WORKER_SIMULATION_STEPS=25
      # Hardware specs
      - WORKER_GPU_COUNT=1
      - WORKER_GPU_MEMORY_GB=8
      - WORKER_GPU_MODEL=Simulation
      - WORKER_CPU_CORES=4
      - WORKER_RAM_GB=16
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped
    # Redis-Direct Worker 2 - Simulation connector (faster)
  worker11:
    container_name: emp-worker11
    build:
      context: .
      dockerfile: Dockerfile.worker-direct
    environment:
      - NODE_ENV=production
      - WORKER_ID=worker11-direct
      - HUB_REDIS_URL=redis://redis:6379/0
      - WORKER_SERVICES=simulation
      - WORKER_CONNECTORS=simulation
      - WORKER_POLL_INTERVAL_MS=1000
      - WORKER_HEARTBEAT_INTERVAL_MS=30000
      - WORKER_MAX_CONCURRENT_JOBS=3
      - WORKER_JOB_TIMEOUT_MINUTES=30
      # Simulation connector config (faster)
      - WORKER_SIMULATION_PROCESSING_TIME=3
      - WORKER_SIMULATION_STEPS=15
      # Hardware specs
      - WORKER_GPU_COUNT=1
      - WORKER_GPU_MEMORY_GB=8
      - WORKER_GPU_MODEL=Simulation
      - WORKER_CPU_CORES=4
      - WORKER_RAM_GB=16
      - LOG_LEVEL=info
      - DISABLE_FILE_LOGGING=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emp-network
    restart: unless-stopped
    # deploy:
    #   replicas: 5  # Create 5 instances for scale testing

  # Redis Commander - Web UI for Redis inspection
  redis-commander:
    container_name: emp-redis-commander
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - emp-network
    restart: unless-stopped
    profiles:
      - debug
      - full

networks:
  emp-network:
    driver: bridge

volumes:
  redis_data:
    driver: local